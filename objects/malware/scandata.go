// Copyright 2016 Bret Jordan, All rights reserved.
//
// Use of this source code is governed by an Apache 2.0 license
// that can be found in the LICENSE file in the root of the source
// tree.

package malware

import (
	"github.com/freetaxii/libstix2/objects/common"
)

// ----------------------------------------------------------------------
// Define Message Type
// ----------------------------------------------------------------------

type ScanDataType struct {
	Product        string `json:"product,omitempty"`
	Engine         string `json:"engine,omitempty"`
	Definition     string `json:"definition,omitempty"`
	Submitted      string `json:"submitted,omitempty"`
	Scanned        string `json:"scanned,omitempty"`
	Classification string `json:"classification,omitempty"`
	Details        string `json:"details,omitempty"`
}

// ----------------------------------------------------------------------
// Public Methods - ScanDataType
// ----------------------------------------------------------------------

func (this *ScanDataType) SetProduct(s string) {
	this.Product = s
}

// This function will set the version number of the Engine
func (this *ScanDataType) SetEngineVersion(s string) {
	this.Engine = s
}

// This function will set the version number of the definition file
func (this *ScanDataType) SetDefinitionVersion(s string) {
	this.Definition = s
}

// SetSubmitted takes in two parameters and returns and error if there is one
// param: t a timestamp in either time.Time or string format
func (this *ScanDataType) SetSubmitted(t interface{}) error {

	ts, err := common.VerifyTimestamp(t)
	if err != nil {
		return err
	}
	this.Submitted = ts

	return nil
}

// SetScanned takes in two parameters and returns and error if there is one
// param: t a timestamp in either time.Time or string format
func (this *ScanDataType) SetScanned(t interface{}) error {

	ts, err := common.VerifyTimestamp(t)
	if err != nil {
		return err
	}
	this.Scanned = ts

	return nil
}

func (this *ScanDataType) SetClassification(s string) {
	this.Classification = s
}

func (this *ScanDataType) SetDetails(s string) {
	this.Details = s
}
