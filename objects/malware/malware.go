// Copyright 2017 Bret Jordan, All rights reserved.
//
// Use of this source code is governed by an Apache 2.0 license
// that can be found in the LICENSE file in the root of the source
// tree.

package malware

import (
	"github.com/freetaxii/libstix2/objects/common/properties"
)

// ----------------------------------------------------------------------
// Define Message Type
// ----------------------------------------------------------------------

/*
MalwareType defines all of the properties associated with the STIX Malware
SDO. All of the methods not defined local to this type are inherited from the
individual properties.
*/
type MalwareType struct {
	properties.CommonObjectPropertiesType
	properties.NamePropertyType
	properties.DescriptionPropertyType
	properties.KillChainPhasesPropertyType
	// Filenames            []string          `json:"filenames,omitempty"`
	// Size                 int               `json:"size,omitempty"`
	// Hashes               map[string]string `json:"hashes,omitempty"`
	// First_seen           string            `json:"first_seen,omitempty"`
	// First_seen_precision string            `json:"first_seen_precision,omitempty"`
	// Region               string            `json:"region,omitempty"`
	// Country              string            `json:"country,omitempty"`
	// Scan_data            []ScanDataType    `json:"scan_data,omitempty"`
}

// ----------------------------------------------------------------------
// Public Create Functions
// ----------------------------------------------------------------------

// New - This function will create a new malware object.
func New(ver string) MalwareType {
	var obj MalwareType
	obj.InitNewObject("malware", ver)
	return obj
}

// ----------------------------------------------------------------------
// Public Methods - MalwareType
// ----------------------------------------------------------------------

// func (this *MalwareType) AddFilename(value string) {
// 	if this.Filenames == nil {
// 		a := make([]string, 0)
// 		this.Filenames = a
// 	}
// 	this.Filenames = append(this.Filenames, value)
// }

// func (this *MalwareType) SetSize(i int) {
// 	this.Size = i
// }

// func (this *MalwareType) AddHash(k, v string) {
// 	if this.Hashes == nil {
// 		m := make(map[string]string, 0)
// 		this.Hashes = m
// 	}
// 	this.Hashes[k] = v
// }

// SetFirstSeen takes in two parameters and returns and error if there is one
// param: t a timestamp in either time.Time or string format
// param: s a timestamp precision in string format
// func (this *MalwareType) SetFirstSeen(t interface{}, s string) error {

// 	ts, err := this.VerifyTimestamp(t)
// 	if err != nil {
// 		return err
// 	}
// 	this.First_seen = ts

// 	p, err := this.VerifyPrecision(s)
// 	if err != nil {
// 		return err
// 	}
// 	this.First_seen_precision = p

// 	return nil
// }

// func (this *MalwareType) SetRegion(s string) {
// 	this.Region = s
// }

// func (this *MalwareType) SetCountry(s string) {
// 	// TODO make sure this is a two digit country code
// 	this.Country = s
// }

// func (this *MalwareType) NewScanData() *ScanDataType {
// 	var o ScanDataType

// 	if this.Scan_data == nil {
// 		a := make([]ScanDataType, 0)
// 		this.Scan_data = a
// 	}

// 	positionThatAppendWillUse := len(this.Scan_data)
// 	this.Scan_data = append(this.Scan_data, o)
// 	return &this.Scan_data[positionThatAppendWillUse]
// }
